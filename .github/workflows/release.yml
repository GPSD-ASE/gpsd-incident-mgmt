name: GPSD Incident Management CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
          
      - name: Run tests
        run: |
          cd app
          ./gradlew test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          
      - name: Run checkstyle
        run: |
          cd app
          ./gradlew checkstyle || true
      
      - name: Check Helm charts
        run: helm lint ./helm

  # Check for version bump needs - only on main branch
  check-version:
    name: Check Version
    if: github.ref == 'refs/heads/main'
    needs: [test, lint]
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.check_changes.outputs.changes }}
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Determine if version bump needed
        id: check_changes
        run: |
          if git log $(git describe --tags --abbrev=0 2>/dev/null || echo 'v0.0.0')..HEAD --pretty=format:%s | grep -E "^(feat|fix|BREAKING CHANGE)"; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup git
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Create CHANGELOG.md if it doesn't exist
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog\n\nAll notable changes to this project will be documented in this file.\n" > CHANGELOG.md
          fi
      
      - name: Update changelog
        if: steps.check_changes.outputs.changes == 'true'
        run: ./scripts/update-changelog.sh || echo "No changelog script found, skipping"
      
      - name: Bump version
        id: bump_version
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          ./scripts/bump-version.sh || echo "No bump script found, skipping"
      
      - name: Update build.gradle.kts version
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          if [ -f app/build.gradle.kts ]; then
            # Update version in build.gradle.kts if it exists
            sed -i "s/version = \".*\"/version = \"${{ steps.bump_version.outputs.new_version }}\"/" app/build.gradle.kts || true
          fi
      
      - name: Commit changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add helm/Chart.yaml
          if [ -f app/build.gradle.kts ]; then git add app/build.gradle.kts; fi
          if [ -f CHANGELOG.md ]; then git add CHANGELOG.md; fi
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }}"
          git tag -a "v${{ steps.bump_version.outputs.new_version }}" -m "Release v${{ steps.bump_version.outputs.new_version }}"
          git push origin main --tags
  
  # Build and publish Docker image
  build:
    name: Build and Push Image
    if: needs.check-version.outputs.changes == 'true'
    needs: [check-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
      
      - name: Build with Gradle
        run: |
          cd app
          ./gradlew build -x test
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_KEY }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            gpsd/gpsd-incident-mgmt:latest
            gpsd/gpsd-incident-mgmt:v${{ needs.check-version.outputs.new_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            JAR_FILE=app/build/libs/*.jar
      
      - name: Scan image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'gpsd/gpsd-incident-mgmt:v${{ needs.check-version.outputs.new_version }}'
          format: 'table'
          exit-code: '0'  # Don't fail for now, just report
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
  
  # Package and publish Helm chart
  publish-helm:
    name: Publish Helm Chart
    if: needs.check-version.outputs.changes == 'true'
    needs: [check-version, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Setup git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Package Helm chart
        run: |
          mkdir -p /tmp/gpsd/
          helm package ./helm -d /tmp/gpsd/
          helm repo index /tmp/gpsd --url https://gpsd-ase.github.io/gpsd-incident-mgmt/ --merge /tmp/gpsd/index.yaml

      - name: Publish to GitHub Pages
        run: |
          git fetch origin gh-pages || true
          git checkout gh-pages || git checkout -b gh-pages
          cp /tmp/gpsd/* .
          git add .
          git commit -m "chore: update helm chart to v${{ needs.check-version.outputs.new_version }}"
          git push origin gh-pages